"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[427],{2406:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=t(1085),o=t(1184);const a={sidebar_position:1},i="Introduction",s={id:"Airport/introduction",title:"Introduction",description:"TypeScript based module",source:"@site/docs/Airport/introduction.md",sourceDirName:"Airport",slug:"/Airport/introduction",permalink:"/airport/docs/Airport/introduction",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Airport",permalink:"/airport/docs/category/airport"},next:{title:"Installation",permalink:"/airport/docs/Airport/installation"}},l={},c=[{value:"TypeScript based module",id:"typescript-based-module",level:2},{value:"React binding module support",id:"react-binding-module-support",level:2},{value:"Code splitting of language set",id:"code-splitting-of-language-set",level:2},{value:"Easy to customize",id:"easy-to-customize",level:2},{value:"Sample feature: Display LS key",id:"sample-feature-display-ls-key",level:3},{value:"Number/DateTime/Currency format customization based on <code>Intl</code>",id:"numberdatetimecurrency-format-customization-based-on-intl",level:2},{value:"DateTime handling and Timezone support",id:"datetime-handling-and-timezone-support",level:2},{value:"Currency conversion support",id:"currency-conversion-support",level:2},{value:"VanillaJS support",id:"vanillajs-support",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components},{Details:a}=n;return a||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"introduction",children:"Introduction"}),"\n",(0,r.jsx)(n.h2,{id:"typescript-based-module",children:"TypeScript based module"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"airport"})," supports strong typings with Typescript."]}),"\n",(0,r.jsx)(n.h2,{id:"react-binding-module-support",children:"React binding module support"}),"\n",(0,r.jsxs)(n.p,{children:["By using ",(0,r.jsx)(n.code,{children:"airport-react"}),", you can use ",(0,r.jsx)(n.code,{children:"Airport"})," made for React. ",(0,r.jsx)(n.code,{children:"Airport"})," also includes ",(0,r.jsx)(n.code,{children:"Subtree"})," feature that you can use to set separate locale to some part of the component tree."]}),"\n",(0,r.jsx)("img",{width:"100%",alt:"Airport Logo",src:"https://github.com/naver/airport/blob/main/images/subtree-diagram.png?raw=true"}),"\n",(0,r.jsx)(n.h2,{id:"code-splitting-of-language-set",children:"Code splitting of language set"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Each message is saved in a format called LSO(Language Set Object) and grouped and used as LS(Language Set)."}),"\n",(0,r.jsx)(n.li,{children:"Save messages in each file where they are used. Then messages will be Code splitted with related components."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"// Language Set (LS)\nconst LS = createLS({\n  // Language Set Object (LSO)\n  hello: {\n    ko: '\uc548\ub155\ud558\uc138\uc694',\n    ja: '\u3053\u3093\u306b\u3061\u306f\u3002',\n    en: 'Hello',\n  },\n  goodbye: {\n    ko: '\uc548\ub155\ud788 \uac00\uc138\uc694.',\n    ja: '\u3055\u3088\u3046\u306a\u3089\u3002',\n    en: 'Good bye',\n  },\n})\n\nairport.t(LS.hello)\n"})}),"\n",(0,r.jsx)(n.p,{children:"At the time of airport instantiation, you can pass a global LS that can be referenced anywhere in the project. If you use XLT, filtering can be done using LS format and provide it as an instance option."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"// Static Messages\nconst globalLS = createLS({\n  home: {\n    ko: '\ud648',\n    ja: '\u30db\u30fc\u30e0',\n    en: 'Home',\n  }\n})\n\nconst airport = new Airport({\n  // ...\n  globalLS,\n})\n\nairport.t('hello')\n"})}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.h2,{id:"easy-to-customize",children:"Easy to customize"}),"\n",(0,r.jsxs)(n.p,{children:["Using ",(0,r.jsx)(n.code,{children:"airport"}),", you can simply add wrappers to elaborate and add features you need."]}),"\n",(0,r.jsx)(n.h3,{id:"sample-feature-display-ls-key",children:"Sample feature: Display LS key"}),"\n",(0,r.jsx)(n.p,{children:"There are cases when Product Managers or other non-developers need to update language sets.\nIn theses cases, it is hard to identify which key to update without actually looking into the code.\nFollowing the sample code that shows LS key in place."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"${YOUR_DOMAIN}?_SHOW_LS_ID_"})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"image",src:t(4440).A+"",width:"2662",height:"1196"})}),"\n",(0,r.jsxs)(a,{children:[(0,r.jsx)("summary",{children:"Sample Code"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import { useAirport as _useAirport, LocaleMap } from 'airport-react'\nimport { AirportType, LocaleType } from '../const/airport'\nimport { GlobalLSType } from '../const/airport/globalLS'\n\nexport const useAirport = () => {\n  const airport = _useAirport<GlobalLSType, LocaleType>()\n\n  const t: typeof airport.t = (...args: any[]) => {\n    const [lsoOrGlobalLSKey, variableMap, forcedLocale] = args\n    const translatedText = airport.t(lsoOrGlobalLSKey as LocaleMap<LocaleType, string>, variableMap, forcedLocale)\n    if (typeof window === 'undefined') return translatedText\n\n    let lsKey = lsoOrGlobalLSKey?.__KEY__ ?? ''\n    let lsID = lsKey.split('#').pop()\n\n    const isGlobalKey = typeof lsoOrGlobalLSKey === 'string'\n    if (isGlobalKey && !lsKey) {\n      lsID = lsKey\n    }\n    const urlParams = new URLSearchParams(window.location.search)\n\n    if (urlParams.has('_SHOW_LS_ID_')) return lsID ?? ''\n    return translatedText\n  }\n\n  return {\n    ...airport,\n    t,\n    airport: { ...airport.airport, t } as AirportType,\n  }\n}\n\n"})})]}),"\n",(0,r.jsxs)(n.h2,{id:"numberdatetimecurrency-format-customization-based-on-intl",children:["Number/DateTime/Currency format customization based on ",(0,r.jsx)(n.code,{children:"Intl"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Number/DateTime/Currency is formatted using ",(0,r.jsx)(n.code,{children:"Intl"})]}),"\n",(0,r.jsx)(n.li,{children:"If you want to customize the format, it can be done manually instead of ICU(International Components for Unicode) or Unicode CLDR(Common Locale Data Repository)"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"airport.fn(1000) // Number formatting with Intl\n\nairport.fd(date) // Date formatting with Intl\nairport.fd(date, 'YYYY-MM-DD') // Date formatting with custom format\n\nairport.fc(99000) // Currency formatting. Customized format will be used if passed as an option at instantiation.\n"})}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.h2,{id:"datetime-handling-and-timezone-support",children:"DateTime handling and Timezone support"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Minimalist JavaScript library, dayjs is used to support Date/Time manipulation and Timezone."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"const now = airport.dayjs()\nconst after1hour = now.add(1, 'hour')\n\nairport.fd(date) // Date formatting using timezone specified at the instantiation. Intl format is used\nairport.fd(date, 'YYYY-MM-DD') // Date formatting using timezone specified at the instantiation. Custom format is used\nairport.fd(date, 'YYYY-MM-DD', 'Asia/Seoul') // Date formatting using timezone passed as the argument. Custom format is used\n"})}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.h2,{id:"currency-conversion-support",children:"Currency conversion support"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"If you set exchange rate and currency for each locale, currency exchange will be applied with relative format."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"const airport = new Airport({\n  supportedLocales,\n  locale: 'ko-KR',\n  fallbackLocale: 'ko-KR',\n  currency: {\n    'ko-KR': Currency.KRW,\n    'en-US': Currency.USD,\n    'ja-JP': Currency.JPY,\n  },\n  keyCurrency: Currency.USD, // Standard currency. Default is USD\n  exchangeRate: {\n    [Currency.USD]: 1,\n    [Currency.KRW]: 1135.50,\n    [Currency.JPY]: 104.34,\n  }\n})\n\n// Custom currency Yen is passed\nconst price = airport.fc(10000, Currenty.JPY) \n// Prints in current locale's currency\nconsole.log(price) // \"\u20a9108,827\" \n"})}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.h2,{id:"vanillajs-support",children:"VanillaJS support"}),"\n",(0,r.jsxs)(n.p,{children:["You can use Airport without ReactJS. See ",(0,r.jsx)(n.code,{children:"Installation > Use airport with vanillaJS"})]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},4440:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/lsKeyDisplay-4b3b6295986e9a3ac53795dcfc0f1edf.png"},1184:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>s});var r=t(4041);const o={},a=r.createContext(o);function i(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);